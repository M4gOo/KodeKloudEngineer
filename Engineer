
=========================== LINUX ============================================

installed a backup agent tool on all app servers. As per the tool's requirements they need to create a user with a non-interactive shell.

sudo adduser kareem -s /sbin/nologin

why have a non-interactive shell?
a non-interactive shell is a type of shell that doesn't interact with the user. We can run it through a script or similar. Also, it can be run through some automated process.


edit limits, nfsuser user is holding hundred of processes, which is degrading the performance of the server. 
vi /etc/security/limits.conf
nfsuser         soft    nproc           1024
nfsuser         hard    nproc           2027



========================== GIT ==========================
 create a bare repository /opt/demo.git 
 sudo git init --bare /opt/demo.git

sudo git add index.html
sudo git commit -m "add index.html"
sudo git push -u origin master

git branch --list

 it is not possible to delete a branch you are currently in and viewing.Usually has an ' * '
  master
* xfusioncorp_apps

make sure to switch to another branch that you do NOT want to delete, with the git checkout



====================  DOCKER ======================================
when install docker always check the OS and the version

create a container named nginx_1 using image nginx with alpine tag and make sure container is in running state.

sudo docker pull alpine

docker run -it --name nginx_1 -d nginx:alpine
--name NAME the name of the container we want to create.
:alpine - it is the tag
alpine is the name of the image we have downloaded
-d is the option to run the container in the background.

docker ps


stop and delete  containers runnins
docker ps -a (list all container running and stopped)
docker rm --force redis


 We received a request to copy some of the data from the docker host to the container.
 copy an encrypted file /tmp/nautilus.txt.gpg from docker host to ubuntu_latest container (running on same server) in /tmp/ location.
docker cp /tmp/nautilus.txt.gpg  95800e3cc636:/tmp/
docker exec -it ubuntu_latest ls /tmp      (to verify the command above)


Suddenly, we started facing some issues with the static website on App Server 1. Look into the issue to fix the same, you can find more details below:
Container's volume /usr/local/apache2/htdocs is mapped with the host's volume /var/www/html.
The website should run on host port 8080 on App Server 1 i.e command curl http://localhost:8080/ should work on App Server 1.

docker inspect container_ID          
docker container start container_ID   (that can be fix)



====================== KUBERNETES =================

Try using spaces and not tabs for your indentation. Use 2 spaces for each indentation. 

kubectl get pods
kubectl edit pod <pod name>
kubectl run nginx --image=nginx --restart=Never

kubectl create deployment nginx --image=nginx

kubectl create ns dev
kubectl run dev-nginx-pod --image=nginx:latest -n dev

the team wants to rollback the recent release
 kubectl rollout history deployment/nginx-deployment
kubectl rollout undo deployment/nginx-deployment    


 one of the team members has been assigned a task to write a template 
Create a ReplicaSet using nginx image with latest tag only and remember to mention and name it as nginx-replicaset.
Labels app should be nginx_app, labels type should be front-end. The container should be named as nginx-container; also make sure replicas counts are 4.

apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: nginx-replicaset
  labels:
    app: nginx_app
    type: front-end
spec:
  # modify replicas according to your case
  replicas: 4
  selector:
    matchLabels:
      type: front-end
  template:
    metadata:
      labels:
        type: front-end
    spec:
      containers:
      - name: nginx-container
        image: nginx:latest



DevOps team is working on developing some scripts that will be executed on different schedules, 
but for the time being the team is creating some cron jobs in Kubernetes cluster with some dummy commands (which will be replaced by original scripts later)

apiVersion: batch/v1
kind: CronJob
metadata:
...

kubectl get cronjob
kubectl get cj

They might come up with some real scripts/commands to use, but for now they are preparing the templates and testing the jobs with dummy commands. 













